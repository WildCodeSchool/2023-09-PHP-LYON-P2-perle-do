<!doctype html>
<html lang="fr">
<head>
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/assets/images/favicon.png">

    <title>{% block title %}{% endblock %}</title>
    
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@picocss/pico@1/css/pico.min.css">
    <link rel="stylesheet" href="/assets/css/style.css">
    <script src="https://kit.fontawesome.com/9fbc16b7ca.js" crossorigin="anonymous"></script>
    {% block stylesheet %}{% endblock %}
</head>

<body>

  {% block navbar %}
  <nav class="navbar-mobile">
    <ul>
      <li><a href="/categories"><i class="fa-regular fa-file-lines color "></i></a></li>
      <li><a href="/customers"><i class="fa-regular fa-user color"></i></a></li>
      <li><a href=""><i class="fa-solid fa-chart-column color"></i></a></li>
      <li><a href=""><i class="fa-regular fa-calendar color"></i></a></li>
      <li><a href="/invoices"><i class="fa-solid fa-receipt color"></i></a></li>
      <li><a href=""><i class="fa-solid fa-cart-shopping color"></i></a></li>
      <li><a href=""><i class="fa-solid fa-calculator color"></i></a></li>
    </ul>
  </nav>

  <nav class="navbar-desktop">
    <ul>
      <img src="/assets/images/logo2.png" alt="logo de perle do">
      <li><a href="/categories"><i class="fa-regular fa-file-lines color "></i>Produits</a></li>
      <li><a href="/customers"><i class="fa-regular fa-user color"></i>Fiches clients</a></li>
      <li><a href=""><i class="fa-solid fa-chart-column color"></i>Chiffre d'affaire</a></li>
      <li><a href=""><i class="fa-regular fa-calendar color"></i>Evênements</a></li>
      <li><a href="/invoices"><i class="fa-solid fa-receipt color"></i>Factures</a></li>
      <li><a href=""><i class="fa-solid fa-cart-shopping color"></i>Panier</a></li>
      <li class="deconnexion"><a href="/"><i class="fa-solid fa-power-off"></i>Deconnexion</a></li>
    </ul>
  </nav>
  {% endblock %}

  {% block header %}
    <header>
        <a href="javascript:window.history.back();"><i class="fa-solid fa-chevron-left"></i></a>
        <img src="/assets/images/logo2.png" alt="logo de perle do">
        <p>{{ now|date("l j F Y", "Europe/Paris") }}</p>
        <a href="/search"><i class="fa-solid fa-magnifying-glass"></i></a>
    </header>
  {% endblock %}

  {% block content %}{% endblock %}

  {% block buttons %}
      <div class="buttons"><article class="add-button"><a href="">
        <p>Ajouter</p></a>
      </article>

      <article class="delete-button"><a href=""><i class="fa-regular fa-trash-can"></i></a>
      </article>

      <article class="edit-button"><a href=""><i class="fa-solid fa-pen"></i></a>
      </article>

      <article class="cancel-button"><a href=""><i class="fa-solid fa-ban"></i></a>
      </article>

      <article class="validate-button"><a href=""><i class="fa-regular fa-circle-check"></i></a>
      </article>

      </div>
  {% endblock %}

  {% block modal %}
<!-- Button to trigger the modal -->
<button class="deleteButton"
  data-target="modal-delete"
  onClick="toggleModal(event)">
  <a href=""><i class="fa-regular fa-trash-can"></i></a>
</button>

<!-- Modal -->
<dialog id="modal-delete">
  <article class="modal">
    <a href="#close"
      aria-label="Close"
      class="close"
      data-target="modal-delete"
      onClick="toggleModal(event)">
    </a>
    <h3>Confirmer la suppression de :</h3>
    <p>
      intégrer ici la recherche dans la bdd
    </p>
    <footer>
      <a href="#cancel"
        role="button"
        class="secondary"
        data-target="modal-delete"
        onClick="toggleModal(event)">
        NON
      </a>
      <a href="#confirm"
        role="button"
        data-target="modal-delete"
        onClick="toggleModal(event)">
        OUI
      </a>
    </footer>
  </article>
</dialog>
  {% endblock %}

  {% block javascript %}
<script>
  // Config
const isOpenClass = "modal-is-open";
const openingClass = "modal-is-opening";
const closingClass = "modal-is-closing";
const animationDuration = 400; // ms
let visibleModal = null;

// Toggle modal
const toggleModal = (event) => {
  event.preventDefault();
  const modal = document.getElementById(event.currentTarget.getAttribute("data-target"));
  typeof modal != "undefined" && modal != null && isModalOpen(modal)
    ? closeModal(modal)
    : openModal(modal);
};

// Is modal open
const isModalOpen = (modal) => {
  return modal.hasAttribute("open") && modal.getAttribute("open") != "false" ? true : false;
};

// Open modal
const openModal = (modal) => {
  if (isScrollbarVisible()) {
    document.documentElement.style.setProperty("--scrollbar-width", `${getScrollbarWidth()}px`);
  }
  document.documentElement.classList.add(isOpenClass, openingClass);
  setTimeout(() => {
    visibleModal = modal;
    document.documentElement.classList.remove(openingClass);
  }, animationDuration);
  modal.setAttribute("open", true);
};

// Close modal
const closeModal = (modal) => {
  visibleModal = null;
  document.documentElement.classList.add(closingClass);
  setTimeout(() => {
    document.documentElement.classList.remove(closingClass, isOpenClass);
    document.documentElement.style.removeProperty("--scrollbar-width");
    modal.removeAttribute("open");
  }, animationDuration);
};

// Close with a click outside
document.addEventListener("click", (event) => {
  if (visibleModal != null) {
    const modalContent = visibleModal.querySelector("article");
    const isClickInside = modalContent.contains(event.target);
    !isClickInside && closeModal(visibleModal);
  }
});

// Close with Esc key
document.addEventListener("keydown", (event) => {
  if (event.key === "Escape" && visibleModal != null) {
    closeModal(visibleModal);
  }
});

// Get scrollbar width
const getScrollbarWidth = () => {
  // Creating invisible container
  const outer = document.createElement("div");
  outer.style.visibility = "hidden";
  outer.style.overflow = "scroll"; // forcing scrollbar to appear
  outer.style.msOverflowStyle = "scrollbar"; // needed for WinJS apps
  document.body.appendChild(outer);

  // Creating inner element and placing it in the container
  const inner = document.createElement("div");
  outer.appendChild(inner);

  // Calculating difference between container's full width and the child width
  const scrollbarWidth = outer.offsetWidth - inner.offsetWidth;

  // Removing temporary elements from the DOM
  outer.parentNode.removeChild(outer);

  return scrollbarWidth;
};

// Is scrollbar visible
const isScrollbarVisible = () => {
  return document.body.scrollHeight > screen.height;
};
</script>
  
  {% endblock %}
</body>

</html>


